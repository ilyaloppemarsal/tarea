// Plantilla de PIPELINE.
// Autor: IvanciniGT

// Al cambiar la verisón sólo se recarga la configuración del proyecto... pero no se ejecutarán las tareas
VERSION_DEL_PIPELINE="0"

// Añadir aquí los parámetros del pipeline
PARAMETROS_DE_MI_PIPELINE=[
    // booleanParam (defaultValue: true, description: 'Descripción de mi parámetro', name: 'MI_PARAM_BOOLEAN'),
    // string(defaultValue: 'valor por defecto', description: 'Descripción de mi parámetro de texto', name: 'MI_PARAM_TEXTO'),
    // choice(choices: ['Valor1', 'Valor2', 'Valor3'], description: 'Descripción de mi parámetro', name: 'MI_PARAM_LISTA')
]

// Añadir aquí los parámetros del pipeline
TRIGGERS_DE_MI_PIPELINE=[
    //cron("* * * * *"),                                                        // Ejecutar cada minuto
    //pollSCM("* * * * *")                                                      // Ejecutar cuando cambie algo en GIT
    //upstream(upstreamProjects: 'PROYECTO_DISPARADOR', threshold: 'FAILURE')   // Ejecutar tras otro proyecto (Incluso si falla)
]

// No tocar este trozo... es el que hace la magia
if (this.params.getOrDefault('VERSION_DEL_PIPELINE',"-1")!=VERSION_DEL_PIPELINE){
    stage('Configuración del JOB'){
        creoConfiguracion()
    }
    return
}
// Aquí empiezan las tareas propias de mi pipeline
node {
    // Recordar hacer checkout del proyetco si es necesario. 
    // Con esta sintaxis no se hace por defecto
        // checkout scm     // En este caso se hace un checkout del mismo repo donde está el JENKINSFILE
        // checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'MiCredencialGitHub', url: 'https://github.com/IvanciniGT/cursoJenkinsWebapp.git']]])
    try{
        stage ("Llamar a tarea 1") {
            build(
                wait: false, 
                job: 'Tarea', 
                parameters: [
                    booleanParam(name: 'GENERAR_ERROR', value: false), 
                    string(name: 'DEMORA', value: '1'), 
                    string(name: 'CONTENIDO', value: 'Contenido por defecto'), 
                    string(name: 'FICHERO', value: 'fichero1')
                ]
            )
        }
        stage ("Llamar a tarea 2") {
            build(
                wait: true, 
                job: 'Tarea', 
                parameters: [
                    booleanParam(name: 'GENERAR_ERROR', value: false), 
                    string(name: 'DEMORA', value: '2'), 
                    string(name: 'CONTENIDO', value: 'Contenido por defecto'), 
                    string(name: 'FICHERO', value: 'fichero2')
                ]
            )
        }
        stage ("Llamar a tareas 3 y 4") {
            parallel(
                "Tarea 3": {
                    build(
                        wait: false, 
                        job: 'Tarea', 
                        parameters: [
                            booleanParam(name: 'GENERAR_ERROR', value: false), 
                            string(name: 'DEMORA', value: '3'), 
                            string(name: 'CONTENIDO', value: 'Contenido por defecto'), 
                            string(name: 'FICHERO', value: 'fichero3')
                        ]
                    )
                },
                "Tarea 4": {
                    try{
                        build(
                            wait: false, 
                            job: 'Tarea', 
                            parameters: [
                                booleanParam(name: 'GENERAR_ERROR', value: false), 
                                string(name: 'DEMORA', value: '4'), 
                                string(name: 'CONTENIDO', value: 'Contenido por defecto'), 
                                string(name: 'FICHERO', value: 'fichero4')
                            ]
                        )
                    }
                    catch(Exc){
                        echo "La tarea 4 explotó, pero me lo como yo"
                    }
                }
            )
        }
    }
    finally {
        stage ("Limpieza del workspace") {
            cleanWs()
        }
    }
}







// Función que crea la configuración. NO TOCAR si no sabes lo que estás haciendo ;)
def creoConfiguracion(){
    properties(
        [
            parameters(
                [
                    choice(name: 'VERSION_DEL_PIPELINE', description: 'Version del pipeline instalada', choices: [ VERSION_DEL_PIPELINE ])
                ] + PARAMETROS_DE_MI_PIPELINE
            ),
            pipelineTriggers( TRIGGERS_DE_MI_PIPELINE )
        ]
    )
}










 
 